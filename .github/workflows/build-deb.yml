name: Build and Release Debian Package for git-pip

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Debian package structure
        run: |
          mkdir -p git-pip/DEBIAN
          mkdir -p git-pip/usr/local/bin
          
          # Copy your script
          cp user/local/bin/get-pip.sh git-pip/usr/local/bin/get-pip

          # Make script executable
          chmod +x git-pip/usr/local/bin/get-pip

          # Create DEBIAN control file
          cat <<EOF > git-pip/DEBIAN/control
          Package: git-pip
          Version: 1.0.$(date +%Y%m%d%H%M)
          Section: utils
          Priority: optional
          Architecture: all
          Maintainer: python_king <mahmod.hagzy@gmail.com>
          Description: A dynamic alternative to pip freeze for managing dependencies efficiently across systems.
          EOF

      - name: Build Debian package
        run: |
          dpkg-deb --build git-pip git-pip.deb

      - name: Delete old GitHub release & tag (if exists)
        run: |
          TAG_NAME="latest"
          gh release delete $TAG_NAME --yes || true
          gh tag delete $TAG_NAME || true
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release & Upload Debian Package
        uses: softprops/action-gh-release@v1
        with:
          tag_name: latest
          release_name: "git-pip latest release"
          body: "Automatically generated release for git-pip."
          files: git-pip.deb
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
