name: Build and Publish get-pip Debian Package

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
          sudo apt update
          sudo apt install -y dpkg-dev gh

      - name: Create Debian Package Structure
        run: |
          mkdir -p get-pip/DEBIAN
          mkdir -p get-pip/usr/local/bin

      - name: Copy Script
        run: |
          if [ -f get-pip.sh ]; then
            cp get-pip.sh get-pip/usr/local/bin/get-pip
            chmod +x get-pip/usr/local/bin/get-pip
          else
            echo "Error: get-pip.sh not found!" && exit 1
          fi

      - name: Create DEBIAN Control File
        run: |
          cat <<EOF > get-pip/DEBIAN/control
          Package: get-pip
          Version: 1.0.$(date +%Y%m%d%H%M)
          Section: utils
          Priority: optional
          Architecture: amd64
          Maintainer: Mahmoud Hegazi <mahmod.hagzy@gmail.com>
          Description: A robust and dynamic alternative to pip freeze.
           get-pip simplifies dependency management for Python projects,
           making it easier to handle dynamic dependencies efficiently.
           It allows developers to quickly snapshot, export, and restore
           dependencies without strict version locking, ensuring smooth
           transitions across different environments.
          EOF

      - name: Build Debian Package
        run: dpkg-deb --build get-pip get-pip.deb

      - name: Delete Old GitHub Release & Tag (if exists)
        continue-on-error: true
        run: |
          TAG_NAME="latest"
          gh release delete $TAG_NAME --yes || true
          gh tag delete $TAG_NAME || true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release & Upload Debian Package
        uses: softprops/action-gh-release@v1
        with:
          tag_name: latest
          release_name: "get-pip latest release"
          body: "ðŸš€ Official release for get-pip - a must-have tool for Python dependency management."
          files: get-pip.deb
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
